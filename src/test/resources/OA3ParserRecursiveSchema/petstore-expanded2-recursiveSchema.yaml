openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
paths:
  /pets:
    get:
      description: |
        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NormalObject"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjWithArray"
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecursiveObject"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjWithRecursiveArrayInArray"
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArrayInArray"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: pet deleted
        "208":
          description: test reponse for parsing 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecursiveCombined"
        "209":
          description: test reponse for parsing 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjWithArrayContainingItself"
        "210":
          description: test reponse for parsing 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjWithRecursiveObjectInArray"
        "211":
          description: test reponse for parsing 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjWithObjWithArrayContainingItself"
        "212":
          description: test reponse for parsing 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjWithArrayObjWithArrayContainingItself"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecursiveArrayInArray"
  
components:
  schemas:
    Pet:
      allOf:
        - $ref: "#/components/schemas/NewPet"
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64
            objExample:
                type: object
                properties:
                    objPropA:
                        type: string
                    objPropB:
                        type: integer
                        format: int32
                    objPropC:
                        type: object
                        properties:
                            nestedPropA:
                                type: string
                            nestedPropB:
                                type: object
                                properties:
                                    nestedNestedPropA:
                                        type: string
                                    

    NewPet:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string

    NormalObject:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
          
    RecursiveObject:
      required:
        - name
      properties:
        name:
          type: string
        self:
          $ref: "#/components/schemas/RecursiveObject"
          
    ArrayInArray:
      type: array
      items: 
        $ref: "#/components/schemas/NormalObject"
    
    RecursiveArrayInArray:
      type: array
      items: 
        $ref: "#/components/schemas/RecursiveArrayInArray"
        
    ObjWithArray:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: array
          items: 
            $ref: "#/components/schemas/NormalObject"
    
    ObjWithRecursiveArrayInArray:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: array
          items: 
            $ref: "#/components/schemas/RecursiveArrayInArray"
            
    ObjWithRecursiveObjectInArray:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: array
          items: 
            $ref: "#/components/schemas/RecursiveObject"
            
    ObjWithArrayObjWithArrayContainingItself:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: array
          items: 
            $ref: "#/components/schemas/ObjWithArrayContainingItself"
             
    ObjWithObjWithArrayContainingItself:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          $ref: "#/components/schemas/ObjWithArrayContainingItself"
            
    ObjWithArrayContainingItself:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: array
          items: 
            $ref: "#/components/schemas/ObjWithArrayContainingItself"
        
            
    RecursiveCombined:
      allOf:
       - $ref: "#/components/schemas/RecursiveObject"
       - $ref: "#/components/schemas/NormalObject"
       - properties:
          name:
            type: object
            allOf:
            - $ref: "#/components/schemas/RecursiveObject"
            - $ref: "#/components/schemas/RecursiveCombined"
            
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
#          type: object
#           properties:
#             subProp1:
#               type: string
          $ref: "#/components/schemas/Pet"
#           allOf:
#             - $ref: "#/components/schemas/Error"
#             - properties:
#                  subProp2:
#                    type: string 